apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: fileprocessing
  labels:
    app: api
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: achodak/fileprocessing-api:latest
        command: ["/bin/sh", "-c"]
        args:
          - "exec uvicorn app:app --host 0.0.0.0 --port 8000"
        ports:
        - containerPort: 8000
        env:
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: fileprocessing-config
              key: postgres-host
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: fileprocessing-config
              key: postgres-db
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: fileprocessing-secrets
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fileprocessing-secrets
              key: postgres-password
        - name: S3_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: fileprocessing-config
              key: s3-endpoint
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: fileprocessing-secrets
              key: minio-access-key
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: fileprocessing-secrets
              key: minio-secret-key
        - name: RABBITMQ_URL
          valueFrom:
            secretKeyRef:
              name: fileprocessing-secrets
              key: rabbitmq-url
        - name: NFS_PATH
          value: "/mnt/nfs_clientshare"
        - name: DATABASE_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):5432/$(POSTGRES_DB)"
        volumeMounts:
        - name: shared-data
          mountPath: /mnt/nfs_clientshare
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
      imagePullSecrets:
      - name: dockerhub-credentials
      volumes:
      - name: shared-data
        persistentVolumeClaim:
          claimName: nfs-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: fileprocessing
spec:
  selector:
    app: api
  ports:
  - port: 80
    targetPort: 8000
  type: ClusterIP